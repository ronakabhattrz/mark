=begin
#CCITS Service Profile

#The **Service Profile** service is used to read and update the following details of the given  Service Profile. - Address - ServiceName(Read Only)     - CCSApproval(Read Only) - Contact   - Declaration   - ExternalManagement   - Fees  - Financial  - OperationAcrossBorders   - Other(Update Only)  - ServiceLocationOfRecord - ServiceStopOperating((Update Only)  - ServiceStopOperatingSale(Update Only) - ServiceTemporarilyCeasing  - SupportingDocuments  - Trustee  

OpenAPI spec version: 2.04

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.7

=end
folder = File.expand_path('.',__dir__)
$:.unshift(folder) unless $:.include?(folder)

# Common files
require 'Account_Management_Service/api_client'
require 'Account_Management_Service/api_error'
require 'Account_Management_Service/version'
require 'Account_Management_Service/configuration'
require 'Account_Management_Service/response'

# Models
require 'Account_Management_Service/models/accs_cap_percentage'
require 'Account_Management_Service/models/address'
require 'Account_Management_Service/models/agency'
require 'Account_Management_Service/models/approval_condition'
require 'Account_Management_Service/models/ccs_approval'
require 'Account_Management_Service/models/child_care_places'
require 'Account_Management_Service/models/collection_of_service_profile'
require 'Account_Management_Service/models/contact'
require 'Account_Management_Service/models/created_service_profile'
require 'Account_Management_Service/models/error'
require 'Account_Management_Service/models/error_detail'
require 'Account_Management_Service/models/external_management'
require 'Account_Management_Service/models/fee'
require 'Account_Management_Service/models/financial'
require 'Account_Management_Service/models/notifications'
require 'Account_Management_Service/models/personnel'
require 'Account_Management_Service/models/records_to_be_provided'
require 'Account_Management_Service/models/related_collection_accs_cap_percentage'
require 'Account_Management_Service/models/related_collection_account_management_records_to_be_provided'
require 'Account_Management_Service/models/related_collection_account_management_service_name'
require 'Account_Management_Service/models/related_collection_address'
require 'Account_Management_Service/models/related_collection_agency'
require 'Account_Management_Service/models/related_collection_approval_condition'
require 'Account_Management_Service/models/related_collection_ccs_approval'
require 'Account_Management_Service/models/related_collection_child_care_places'
require 'Account_Management_Service/models/related_collection_contact'
require 'Account_Management_Service/models/related_collection_external_management'
require 'Account_Management_Service/models/related_collection_fee'
require 'Account_Management_Service/models/related_collection_personnel'
require 'Account_Management_Service/models/related_collection_service_location_of_record'
require 'Account_Management_Service/models/related_collection_service_stop_operating_sale'
require 'Account_Management_Service/models/related_collection_service_temporarily_ceasing'
require 'Account_Management_Service/models/related_collection_supporting_document'
require 'Account_Management_Service/models/related_collection_trustee'
require 'Account_Management_Service/models/serious_incident'
require 'Account_Management_Service/models/service_location_of_record'
require 'Account_Management_Service/models/service_name'
require 'Account_Management_Service/models/service_profile'
require 'Account_Management_Service/models/service_stop_operating'
require 'Account_Management_Service/models/service_stop_operating_sale'
require 'Account_Management_Service/models/service_temporarily_ceasing'
require 'Account_Management_Service/models/supporting_document'
require 'Account_Management_Service/models/trustee'
require 'Account_Management_Service/models/wrapper'

# APIs
require 'Account_Management_Service/api/service_profiles_api'

module AccountManagementService
  class << self
    # Customize default settings for the SDK using block.
    #   AccountManagementService.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
